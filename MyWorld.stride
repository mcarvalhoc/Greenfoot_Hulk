<?xml version="1.0" encoding="UTF-8"?>
<class name="MyWorld" extends="World" extends-java="World" enable="true" strideversion="1">
    <javadoc xml:space="preserve"/>
    <imports>
        <import target="java.util.*" enable="true"/>
        <import target="greenfoot.*" enable="true"/>
    </imports>
    <implements/>
    <fields>
        <variable access="private" type="Integer" type-java="Integer" name="ciclo" value="0" value-java="0" enable="true"/>
        <variable access="private" type="Hulk" type-java="Hulk" name="hulk" value="null" value-java="null" enable="true"/>
        <variable access="private" type="Apple" type-java="Apple" name="apple" value="null" value-java="null" enable="true"/>
        <variable access="private" type="Placar" type-java="Placar" name="placar" value="null" value-java="null" enable="true"/>
    </fields>
    <constructors>
        <constructor access="public" enable="true">
            <javadoc xml:space="preserve">Constructor for objects of class MyWorld.</javadoc>
            <params/>
            <throws/>
            <delegate target="super" params="600,400,1" params-java="600, 400, 1"/>
            <body>
                <call expression="prepare()" expression-java="prepare()" enable="true"/>
            </body>
        </constructor>
    </constructors>
    <methods>
        <method access="private" type="void" type-java="void" name="prepare" enable="true">
            <javadoc xml:space="preserve">Prepara o mundo para o início do programa.
Ou seja: criar os objetos iniciais e adicioná-los ao mundo.</javadoc>
            <params/>
            <throws/>
            <body>
                <assign dest="hulk" dest-java="hulk" src="new Hulk()" src-java=" new Hulk()" enable="true"/>
                <call expression="addObject(hulk,212,189)" expression-java="addObject(hulk, 212, 189)" enable="true"/>
                <call expression="adicionaApple()" expression-java="adicionaApple()" enable="true"/>
                <assign dest="placar" dest-java="placar" src="new Placar()" src-java=" new Placar()" enable="true"/>
                <call expression="addObject(placar,315,40)" expression-java="addObject(placar, 315, 40)" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="contaCiclo" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <assign dest="ciclo" dest-java="ciclo" src="ciclo+1" src-java="ciclo + 1" enable="true"/>
                <if condition="ciclo&gt;1000" condition-java="ciclo &gt; 1000" enable="true">
                    <ifStatements>
                        <assign dest="ciclo" dest-java="ciclo" src="0" src-java="0" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="int" type-java="int" name="getCiclo" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <return value="ciclo" value-java="ciclo" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="act" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <call expression="contaCiclo()" expression-java="contaCiclo()" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="contaApple" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <call expression="placar.adicionaPonto()" expression-java="placar.adicionaPonto()" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="adicionaApple" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <call expression="addObject(new Apple(),Greenfoot.getRandomNumber(600),Greenfoot.getRandomNumber(400))" expression-java="addObject( new Apple(), Greenfoot.getRandomNumber(600), Greenfoot.getRandomNumber(400))" enable="true"/>
            </body>
        </method>
    </methods>
</class>
